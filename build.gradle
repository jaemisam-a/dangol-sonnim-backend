plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

def querydslVersion = '4.3.1'
group = 'com.dangol'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar {
	enabled = false
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	/**
	 * Query Dsl 관련 dependency 추가
	 **/
	implementation group: 'com.querydsl', name: 'querydsl-jpa', version: querydslVersion
	implementation group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion
	implementation group: 'com.querydsl', name: 'querydsl-core', version: querydslVersion

	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion, classifier: 'jpa'
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	/**
	 * RestDoc 관련 dependency 추가
	 **/
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

// ext : build script 에서 사용할 수 있는 추가적인 속성들을 정의
ext {
	//테스트를 통해 생성될 조각(문서화에 필요한)들이 저장될 위치
	snippetsDir = file('build/generated-snippets')
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir // 테스트 실행 후 snippetsDir 생성
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

// AsciiDoc 문서를 빌드하고 HTML 로 변환
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test // dependsOn A : A task 실행 후 해당 task 실행
}

// bootJar : 스프링 부트 프로젝트를 실행 가능한 JAR 파일로 패키징하는 기능
bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
	finalizedBy 'copyDocument' // finalizedBy A : 해당 task 실행 후 A task 실행
}

// 디렉토리 파일 복사 (bootJar 이후에 수행)
task copyDocument(type: Copy) {
	dependsOn bootJar
	from file("${asciidoctor.outputDir}")
	into file("build/resources/main/static/docs")
}

clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}
